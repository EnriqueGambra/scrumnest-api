type Mutation {
  createNest(
    name: String!
  ): Nest

  addNestUser(
    nestId: ID!,
    username: String!
  ): Nest

  createStory(
    nestId: ID!,
    title: String!,
    description: String,
    owner: String,
    status: Status
  ): Story

  addStoryAttachment(
    nestId: ID!,
    storyId: ID!,
    name: String!,
    key: String!
  ): Story

  updateStoryStatus(
    nestId: ID!,
    storyId: ID!,
    status: Status!
  ): Nest  # return Nest here because it is simpler for the UI to re-render the whole Nest
}

type Query {
  nest(nestId: ID!): Nest
  nests(username: String): [Nest]  # optional username param
  story(nestId: ID!, storyId: ID!): Story
  stories(nestId: ID!): [Story]
  users(prefix: String, username: String): [User]  # optional username prefix and username param
}

type Subscription {
  subscribeToNestStatus(nestId: ID!): Nest
    @aws_subscribe(mutations: ["updateStoryStatus"])
}

type Nest {
  nestId: ID!
  name: String!
  createdAt: String!
  owner: String!
  stories: [Story]!
  users: [String]!
}

type Story {
  nestId: ID!
  storyId: ID!
  title: String!
  description: String
  createdAt: String!
  owner: String
  status: Status!
  attachments: [FileObject]!
}

type FileObject {
  name: String!
  key: String!
  createdAt: String!
}

type User {
  username: String!
  email: String!
}

enum Status {
  IDEA
  DEFINED
  IN_DEV
  TESTING
  COMPLETE
  ACCEPTED
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
